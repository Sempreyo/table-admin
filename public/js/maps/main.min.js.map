{"version":3,"sources":["main.js"],"names":["document","addEventListener","anchors","querySelectorAll","length","forEach","anchor","e","preventDefault","window","location","hash","querySelector","scrollIntoView","behavior","selection","start","hovered","end","active","clickCount","setCellFocus","td","parent","cell","classList","remove","add","setEditableCellEvent","tagName","rowIndex","dataset","row","columnIndex","column","style","backgroundColor","joinCells","alert","makeCellEditable","updateSelectionHandler","table","startRow","Math","min","endRow","max","startColumn","endColumn","cellSelected","rows","tdFirst","cells","tdFirstValue","textContent","setAttribute","rowSpan","colSpan","resetSelection","createTable","rowsInput","columnsInput","menuCreate","menuPanel","value","columns","createElement","thead","headerRow","tbody","isNaN","innerHTML","th","toString","append","target","tr","removeAttribute","currentText","input","type","focus","finishEditing","stopPropagation","key","createRowHandler","focusedCell","closest","newRow","children","insertAdjacentElement","createColumnHandler","focusedCellIndex","cellIndex","newCell","container","menuCreateTable","createButton","addRowButton","addColumnButton","joinCellsButton"],"mappings":"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","file":"../main.min.js","sourcesContent":["/* Common */\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n\tconst anchors = document.querySelectorAll('.anchor');\r\n\r\n\tif (anchors && anchors.length > 0) {\r\n\t\tanchors.forEach(anchor => {\r\n\t\t\tanchor.addEventListener('click', function (e) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tif (window.location.hash) {\r\n\t\t\t\t\tdocument.querySelector(window.location.hash).scrollIntoView({\r\n\t\t\t\t\t\tbehavior: 'smooth'\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n});\r\nlet selection = {\r\n\tstart: null,\r\n\thovered: null,\r\n\tend: null,\r\n\tactive: false,\r\n\tclickCount: 0\r\n};\r\n\r\nconst setCellFocus = (td, parent) => {\r\n\tconst cells = parent.querySelectorAll(\"td, th\");\r\n\r\n\tcells.forEach(cell => cell.classList.remove(\"focused\"));\r\n\ttd.classList.add(\"focused\");\r\n}\r\n\r\n// Событие редактирования ячейки\r\nconst setEditableCellEvent = (cell, parent) => {\r\n\tcell.addEventListener(\"click\", () => {\r\n\t\tif (!selection.active) { // В обычном режиме\r\n\t\t\tsetCellFocus(cell, parent);\r\n\t\t\tmakeCellEditable(cell);\r\n\t\t} else if (cell.tagName === \"TD\") { // В режиме объединения/разделения ячеек\r\n\t\t\tconst rowIndex = +cell.dataset.row;\r\n\t\t\tconst columnIndex = +cell.dataset.column;\r\n\r\n\t\t\tswitch (selection.clickCount) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tselection.start = {rowIndex, columnIndex};\r\n\t\t\t\t\tselection.clickCount += 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tif (selection.start.rowIndex !== +cell.dataset.row ||\r\n\t\t\t\t\t\tselection.start.columnIndex !== +cell.dataset.column\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tselection.clickCount += 1;\r\n\t\t\t\t\t\tparent.querySelectorAll(\"td\").forEach(cell => cell.style.backgroundColor = \"\");\r\n\t\t\t\t\t\tselection.end = {rowIndex, columnIndex};\r\n\t\t\t\t\t\tjoinCells(parent);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\talert(\"Выделите вторую ячейку для объединения\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// Выделение ячеек при объединении/разделении\r\nconst updateSelectionHandler = (table, cell) => {\r\n\tif (cell.tagName !== \"TD\") return;\r\n\r\n\tconst rowIndex = +cell.dataset.row;\r\n\tconst columnIndex = +cell.dataset.column;\r\n\r\n\tselection.hovered = {rowIndex, columnIndex};\r\n\r\n\ttable.querySelectorAll(\"td\").forEach(cell => cell.style.backgroundColor = \"\");\r\n\r\n\tif (!selection.start || !selection.hovered || selection.clickCount > 1) return;\r\n\r\n\tconst startRow = Math.min(selection.start.rowIndex, selection.hovered.rowIndex);\r\n\tconst endRow = Math.max(selection.start.rowIndex, selection.hovered.rowIndex);\r\n\tconst startColumn = Math.min(selection.start.columnIndex, selection.hovered.columnIndex);\r\n\tconst endColumn = Math.max(selection.start.columnIndex, selection.hovered.columnIndex);\r\n\t\r\n\tfor (let row = startRow; row <= endRow; row++) {\r\n\t\tfor (let column = startColumn; column <= endColumn; column++) {\r\n\t\t\tconst cellSelected = table.querySelector(`td[data-row=\"${row}\"][data-column=\"${column}\"]`);\r\n\r\n\t\t\tif (cellSelected) {\r\n\t\t\t\tcellSelected.style.backgroundColor = \"#a2ddfa\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Объединение ячеек\r\nconst joinCells = (table) => {\r\n\tconst startRow = Math.min(selection.start.rowIndex, selection.end.rowIndex);\r\n\tconst endRow = Math.max(selection.start.rowIndex, selection.end.rowIndex);\r\n\tconst startColumn = Math.min(selection.start.columnIndex, selection.end.columnIndex);\r\n\tconst endColumn = Math.max(selection.start.columnIndex, selection.end.columnIndex);\r\n\r\n\tconst rows = table.querySelectorAll(\"tbody tr\");\r\n\tconst tdFirst = rows[startRow].cells[startColumn]; // Первая выделенная ячейка\r\n\tconst tdFirstValue = tdFirst.textContent; // Значение первой выделенной ячейки\r\n\r\n\tfor (let row = startRow; row <= endRow; row++) {\r\n\t\tfor (let column = startColumn; column <= endColumn; column++) {\r\n\t\t\tif (row === startRow && column === startColumn) continue; // Пропускаем первую ячейку, остальные прячем\r\n\r\n\t\t\tconst td = rows[row].cells[column];\r\n\t\t\ttd.setAttribute(\"hidden\", \"true\");\r\n\t\t\ttd.setAttribute(\"data-merged\", \"true\");\r\n\t\t\ttd.setAttribute(\"data-merged-with\", `${startRow}, ${startColumn}`);\r\n\t\t}\r\n\t}\r\n\t\r\n\ttdFirst.rowSpan = endRow - startRow + 1;\r\n\ttdFirst.colSpan = endColumn - startColumn + 1;\r\n\ttdFirst.textContent = tdFirstValue;\r\n\ttdFirst.setAttribute(\"data-merged-main\", \"true\");\r\n\r\n\tresetSelection();\r\n}\r\n\r\nconst createTable = (parent, rowsInput, columnsInput, menuCreate, menuPanel) => {\r\n\tconst rows = +rowsInput.value;\r\n\tconst columns = +columnsInput.value;\r\n\tconst table = document.createElement(\"table\"); // Элемент таблицы\r\n\tconst thead = document.createElement(\"thead\"); // Заголовок таблицы\r\n\tconst headerRow = document.createElement(\"tr\"); // Строка для заголовка таблицы\r\n\tconst tbody = document.createElement(\"tbody\"); // Тело таблицы\r\n\r\n\tif (isNaN(rows) || isNaN(columns) || rows < 1 || columns < 1) {\r\n\t\talert(\"Введите правильное количество строк и столбцов от 1\");\r\n\t\treturn;\r\n\t}\r\n\r\n\tparent.innerHTML = \"\";\r\n\r\n\t// Создание заголовка таблицы thead\r\n\tfor (let cell = 0; cell < columns; cell++) {\r\n\t\tconst th = document.createElement(\"th\");\r\n\r\n\t\tth.textContent = `Заголовок ${cell+1}`;\r\n\t\t//th.addEventListener(\"click\", sortTable(i));\r\n\r\n\t\tth.dataset.row = \"0\";\r\n\t\tth.dataset.column = cell.toString();\r\n\t\theaderRow.append(th);\r\n\r\n\t\tsetEditableCellEvent(th, parent);\r\n\r\n\t\tth.addEventListener(\"mouseenter\", (e) => updateSelectionHandler(parent, e.target));\r\n\t}\r\n\r\n\tthead.append(headerRow);\r\n\ttable.append(thead);\r\n\r\n\t// Создание тела таблицы tbody\r\n\tfor (let row = 0; row < rows - 1; row++) {\r\n\t\tconst tr = document.createElement(\"tr\");\r\n\r\n\t\tfor (let cell = 0; cell < columns; cell++) {\r\n\t\t\tconst td = document.createElement(\"td\");\r\n\r\n\t\t\t// Добавляем фокус первой ячейке в первой строке\r\n\t\t\tif (row === 0 && cell === 0) {\r\n\t\t\t\tsetCellFocus(td, parent);\r\n\t\t\t}\r\n\r\n\t\t\ttd.textContent = `Строка ${row+1}, Ячейка ${cell+1}`;\r\n\t\t\ttd.dataset.row = row.toString();\r\n\t\t\ttd.dataset.column = cell.toString();\r\n\t\t\ttr.append(td);\r\n\r\n\t\t\tsetEditableCellEvent(td, parent);\r\n\r\n\t\t\ttd.addEventListener(\"mouseenter\", (e) => updateSelectionHandler(parent, e.target));\r\n\t\t}\r\n\r\n\t\ttbody.append(tr);\r\n\t}\r\n\r\n\ttable.append(tbody);\r\n\tparent.append(table);\r\n\r\n\tmenuCreate.setAttribute(\"hidden\", true);\r\n\tmenuPanel.removeAttribute(\"hidden\");\r\n\r\n\t// Создание событий\r\n\t/*const newTable = parent.querySelector(\"table\");\r\n\r\n\tnewTable.addEventListener(\"click\", (e) => {\r\n\r\n\t});*/\r\n}\r\n\r\nconst makeCellEditable = (td) => {\r\n\tconst currentText = td.textContent;\r\n\ttd.textContent = \"\";\r\n\r\n\tconst input = document.createElement(\"input\");\r\n\tinput.type = \"text\";\r\n\tinput.value = currentText;\r\n\r\n\ttd.append(input);\r\n\tinput.focus();\r\n\r\n\tconst finishEditing = () => {\r\n\t\ttd.textContent = input.value;\r\n\t}\r\n\r\n\tinput.addEventListener(\"blur\", finishEditing);\r\n\r\n\tinput.addEventListener(\"click\", (e) => {\r\n\t\te.stopPropagation();\r\n\t});\r\n\r\n\tinput.addEventListener(\"keydown\", (e) => {\r\n\t\tif (e.key === \"Enter\") {\r\n\t\t\tfinishEditing();\r\n\t\t}\r\n\t});\r\n}\r\n\r\nconst createRowHandler = (table) => {\r\n\tconst focusedCell = table.querySelector(\".focused\");\r\n\r\n\tif (focusedCell) {\r\n\t\tconst row = focusedCell.closest(\"tr\");\r\n\t\tconst newRow = document.createElement(\"tr\");\r\n\r\n\t\t[...row.children].forEach(() => {\r\n\t\t\tconst td = document.createElement(\"td\");\r\n\r\n\t\t\tsetEditableCellEvent(td, table);\r\n\r\n\t\t\tnewRow.append(td);\r\n\t\t})\r\n\r\n\t\trow.insertAdjacentElement(\"afterend\", newRow);\r\n\t}\r\n}\r\n\r\nconst createColumnHandler = (table) => {\r\n\tconst focusedCellIndex = table.querySelector(\".focused\").cellIndex;\r\n\r\n\ttable.querySelectorAll(\"tr\").forEach(tr => {\r\n\t\tconst cellSelected = tr.querySelectorAll(\"td, th\")[focusedCellIndex];\r\n\t\tconst newCell = cellSelected.tagName === \"TD\" ?\r\n\t\t\tdocument.createElement(\"td\") :\r\n\t\t\tdocument.createElement(\"th\");\r\n\r\n\t\tsetEditableCellEvent(newCell, table);\r\n\r\n\t\tcellSelected.insertAdjacentElement(\"afterend\", newCell);\r\n\t});\r\n}\r\n\r\nconst resetSelection = () => {\r\n\tselection = {\r\n\t\tstart: null,\r\n\t\thovered: null,\r\n\t\tend: null,\r\n\t\tactive: false,\r\n\t\tclickCount: 0\r\n\t}\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n\tconst container = document.querySelector(\".table__wrapper\");\r\n\tlet table = null;\r\n\tconst menuCreateTable = document.querySelector(\".table__create\");\r\n\tconst menuPanel = document.querySelector(\".table__panel\");\r\n\tconst rowsInput = menuCreateTable.querySelector(\".table__num-rows\");\r\n\tconst columnsInput = menuCreateTable.querySelector(\".table__num-columns\");\r\n\tconst createButton = menuCreateTable.querySelector(\".js-create-table\");\r\n\tconst addRowButton = menuPanel.querySelector(\".js-create-row\");\r\n\tconst addColumnButton = menuPanel.querySelector(\".js-create-column\");\r\n\tconst joinCellsButton = menuPanel.querySelector(\".js-join-cells\");\r\n\r\n\tcreateButton.addEventListener(\"click\", () => {\r\n\t\tcreateTable(container, rowsInput, columnsInput, menuCreateTable, menuPanel);\r\n\t\ttable = container.querySelector(\".table__wrapper table\");\r\n\t});\r\n\r\n\taddRowButton.addEventListener(\"click\", () => createRowHandler(table));\r\n\taddColumnButton.addEventListener(\"click\", () => createColumnHandler(table));\r\n\tjoinCellsButton.addEventListener(\"click\", () => {\r\n\t\tselection.active = true;\r\n\t});\r\n});"]}